materialTables:
  tables:
  - header: '## Physical & Mechanical Properties'
    rows:
    - property: Density
      value: '1.2'
      unit: g/cm³
    - property: Thermal Conductivity
      value: '0.2'
      unit: W/m·K
    - property: Tensile Strength
      value: '100'
      unit: MPa
    - property: Young's Modulus
      value: '10'
      unit: GPa
  - header: '## Laser Processing Parameters'
    rows:
    - property: Power Range
      value: '35.0'
      unit: W
    - property: Pulse Duration
      value: '10.0'
      unit: ns
      category: Standard
    - property: Wavelength
      value: '355.0'
      unit: nm
      category: Optimal
    - property: Spot Size
      value: '2.0'
      unit: mm
      category: Configurable
    - property: Repetition Rate
      value: '25.0'
      unit: kHz
      category: Variable
    - property: Fluence Range
      value: '0.2'
      unit: J/cm²
      category: Range
    - property: Beam Profile
      value: Gaussian TEM00
      unit: '-'
      category: System
    - property: Safety Class
      value: Class 4 (requires full enclosure)
      unit: '-'
      category: Safety
  - header: '## Applications & Industries'
    rows:
    - property: Aerospace
      value: Removal of surface contaminants and coatings from GFRP components
      unit: '-'
      category: Application
    - property: Automotive
      value: Cleaning of GFRP parts for repair and restoration
      unit: '-'
      category: Application
  - header: '## Compatibility & Standards'
    rows:
    - property: Material Compatibility
      value: laser_types, surface_treatments, incompatible_conditions
      unit: '-'
      category: Compatibility
renderInstructions: 'In Next.js, loop over tables[].rows and render as <table> with <tr><td>{property}</td><td>{value} ({unit})</td><td>{min}-{max}</td><td>{percentile ? percentile + ''%'' : ''N/A''}</td><td>{category}</td></tr>. Use MDX for headers. Pure data structure optimized for performance.'
