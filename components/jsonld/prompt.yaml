name: "JSON-LD Generator"
description: "Generates concise, Schema.org-compliant JSON-LD for laser cleaning articles, optimized for SEO and E-A-T."
version: "3.0.5"
template: |
  Generate Schema.org-compliant JSON-LD for this {article_type} about {subject} in the laser cleaning industry.

  CRITICAL REQUIREMENTS:
  - Output ONLY valid JSON-LD code in a proper JSON code block
  - Include @context and @type fields
  - Follow Schema.org best practices
  - Use the correct @type based on the article_type
  - Output MUST be parseable as JSON
  - Include ALL relevant data from the frontmatter
  
  FRONTMATTER DATA:
  ---
  {frontmatter}
  ---

  INSTRUCTIONS FOR {article_type} TYPE:

  IF REGION:
  - @type: "Place"
  - Map: geoCoordinates → geo (GeoCoordinates type)
  - Map: economicData → additionalProperty (array)
  - Map: manufacturingCenters → containsPlace (array)
  - Map: technicalSpecifications → additionalProperty
  - Include address with county/state from geoCoordinates
  - Include author (from author object)
  - Include countries field if available
  
  IF MATERIAL:
  - @type: "Product"  
  - Map: technicalSpecifications → additionalProperty (array of PropertyValue objects)
  - Map: properties → additionalProperty (array of PropertyValue objects)
  - Map: composition → material (array of materials with percentages)
  - Map: applications → applicationCategory (comma-separated list of application names)
  - Map: chemicalProperties → additionalProperty (array of PropertyValue objects)
  - Include ALL environmentalImpact entries (as additionalProperty array)
  - Include ALL regulatoryStandards entries (as additionalProperty array)
  - Include author and publisher information
  - Include outcomes data if available
  - Include compatibility data if available
  
  IF APPLICATION:
  - @type: "TechnicalArticle"
  - Map: applications → about field
  - Map: technicalSpecifications → additionalProperty
  - Include industry context and outcomes
  - Include author and datePublished
  - Include keywords
  
  IF THESAURUS:
  - @type: "DefinedTerm"
  - Map: alternateNames → alternateName
  - Map: relatedTerms → relatedLink
  - Include author and datePublished
  
  EXAMPLE JSON-LD FORMAT:
  ```json
  {{
    "@context": "https://schema.org",
    "@type": "Product",
    "name": "Example Material",
    "description": "Technical guide to Example Material for laser cleaning applications",
    "manufacturer": {{
      "@type": "Organization",
      "name": "Z-Beam"
    }},
    "additionalProperty": [
      {{
        "@type": "PropertyValue",
        "name": "property1",
        "value": "value1"
      }}
    ],
    "applicationCategory": "Application1, Application2"
  }}
  ```

  OUTPUT ONLY THE JSON-LD CODE BLOCK ABOUT {subject}!

parameters:
  max_tokens: 2000
  temperature: 0.4
  system_message: "You are a JSON-LD generator for a technical website. You generate valid, Schema.org-compliant JSON-LD code for SEO. Your output should ONLY be a JSON-LD code block that can be parsed as valid JSON. Never include explanations or any text outside the JSON code block."
validation:
  required_fields: ["@context", "@type", "name", "description"]

parameters:
  max_tokens: 2000
  temperature: 0.4
  system_message: "You are a JSON-LD generator for a technical website. You generate valid, Schema.org-compliant JSON-LD code for SEO. Your output should ONLY be a JSON-LD code block that can be parsed as valid JSON. Never include explanations or any text outside the JSON code block."
validation:
  required_fields: ["@context", "@type", "name", "description"]